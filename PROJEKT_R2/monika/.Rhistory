source('~/Projects/GIT/DATA_SCIENCE/jdsz1-sqluci/PROJEKT_R2/monika/candy2.R', encoding = 'UTF-8')
auc
library(ROCR)
library(ggplot2)
library(ggcorrplot)
instal.packages("ggcorrplot")
install.packages("ggcorrplot")
mydata<-read.csv("C:/Users/BUNT/Documents/JDS/R/Projekt candy/candy-data.csv")
mydata<-read.csv("C:\Users/miser/Documents/Projects/GIT/DATA_SCIENCE/jdsz1-sqluci/PROJEKT_R2/monika/candy-data.csv")
mydata<-read.csv("C:\\Users/miser/Documents/Projects/GIT/DATA_SCIENCE/jdsz1-sqluci/PROJEKT_R2/monika/candy-data.csv")
summary(mydata)
str(mydata)
mydata2 <- mydata[c(2:13)]
mapply(anyNA, mydata2)
# Compute a correlation matrix
corr <- round(cor(mydata2), 1)
head(corr[, 1:12])
# Compute a matrix of correlation p-values
p.mat <- cor_pmat(mydata2)
head(p.mat[, 1:12])
# Visualize the correlation matrix
# --------------------------------
# method = "square" (default)
ggcorrplot(corr)
library(ggcorrplot)
# Visualize the correlation matrix
# --------------------------------
# method = "square" (default)
ggcorrplot(corr)
# Visualize the correlation matrix
# --------------------------------
# method = "square" (default)
ggcorrplot(corr)
# method = "circle"
ggcorrplot(corr, method = "circle")
# Reordering the correlation matrix
# --------------------------------
# using hierarchical clustering
ggcorrplot(corr, hc.order = TRUE, outline.col = "white")
# Types of correlogram layout
# --------------------------------
# Get the lower triangle
ggcorrplot(corr, hc.order = TRUE, type = "lower",
outline.col = "white")
# Get the upeper triangle
ggcorrplot(corr, hc.order = TRUE, type = "upper",
outline.col = "white")
# Add correlation coefficients
# --------------------------------
# argument lab = TRUE
ggcorrplot(corr, hc.order = TRUE, type = "lower",
lab = TRUE)
