library(XML)
library(RCurl)
link <- "https://docs.google.com/spreadsheets/d/1P9PG5mcbaIeuO9v_VE5pv6U4T2zyiRiFK_r8jVksTyk/htmlembed?single=true&gid=0&range=a10:o400&widget=false&chrome=false"
xData <- getURL(link)
dane_z_html <- readHTMLTable(xData, stringsAsFactors = FALSE, skip.rows = c(1,3), encoding = "utf8")
df_dane <- as.data.frame(dane_z_html)
colnames(df_dane) <- df_dane[1,]
df2 <- df_dane[2:nrow(df_dane),]
df2
#zamaiana przecinka na kropke i liczbe
for (i in 8:16)
df2[[i]] <- as.numeric(gsub(",",".",df2[[i]]))
df2
ggplot(data = tab) +
geom_point(mapping = aes(
x = as.Date(df2$Publikacja,"%d.%m.%y"),
y = df2$.N,
color = df2$Osrodek)) +
geom_smooth(mapping = aes(
x = as.Date(df2$Publikacja,"%d.%m.%y"),
y = df2$.N,
color = tab$Ośrodek))
ggplot(data = df2) +
geom_point(mapping = aes(
x = as.Date(df2$Publikacja,"%d.%m.%y"),
y = df2$.N,
color = df2$Osrodek)) +
geom_smooth(mapping = aes(
x = as.Date(df2$Publikacja,"%d.%m.%y"),
y = df2$.N,
color = tab$Ośrodek))
library(tidyvers)
install.packages("tidyvers")
library(tidyvers)
install.packages("tidyvers")
library(tidyverse)
library(tidyvers)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
ggplot(data = df2) +
geom_point(mapping = aes(
x = as.Date(df2$Publikacja,"%d.%m.%y"),
y = df2$.N,
color = df2$Osrodek)) +
geom_smooth(mapping = aes(
x = as.Date(df2$Publikacja,"%d.%m.%y"),
y = df2$.N,
color = tab$Ośrodek))
ggplot(data = df2) +
geom_point(mapping = aes(
x = as.Date(df2$Publikacja,"%d.%m.%y"),
y = df2$.N,
color = df2$Osrodek)) +
geom_smooth(mapping = aes(
x = as.Date(df2$Publikacja,"%d.%m.%y"),
y = df2$.N,
color = df2$Ośrodek))
library(RPostgreSQL)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "postgres", host = "localhost", port = 5432, user = "postgres", password = "postgres") # to nie jest dobra praktyka na haslo, powinno byc w zmiennych Ĺ›rodowiskowych
dbExistsTable(con, "wnioski")
wnioski_db <- dbGetQuery(con, "SELECT * from wnioski limit 10000")
ggplot(data = wnioski_db) +
geom_point(mapping = aes(x = liczba_pasazerow, y = kwota_rekompensaty, color=kanal)) +
geom_smooth(mapping = aes(x = liczba_pasazerow, y = kwota_rekompensaty)) +
facet_wrap(~ jezyk, ncol = 3)
ggplot(data = wnioski_db,
mapping  = aes(
x = liczba_pasazerow,
y = kwota_rekompensaty))
geom_point() +
geom_smooth() +
facet_wrap(~ jezyk, ncol = 3)
ggplot(data = wnioski_db,
mapping  = aes(
x = liczba_pasazerow,
y = kwota_rekompensaty))
geom_point() +
geom_smooth()
ggplot(data = wnioski_db,
mapping  = aes(x = liczba_pasazerow, y = kwota_rekompensaty)) +
geom_point() +
geom_smooth() +
facet_wrap(~ jezyk, ncol = 3)
ggplot(data = wnioski_db,
mapping  = aes(x = liczba_pasazerow, y = kwota_rekompensaty)) +
geom_point(mapping=aes(color=kanal)) +
geom_smooth() +
facet_wrap(~ jezyk, ncol = 3)
ggplot(data = df2) +
geom_point(mapping = aes(
x = as.Date(df2$Publikacja,"%d.%m.%y"),
y = df2$.N,
color = df2$Ośrodek)) +
geom_smooth(mapping = aes(
x = as.Date(df2$Publikacja,"%d.%m.%y"),
y = df2$.N,
color = df2$Ośrodek))
ggplot(data = wnioski_db,
mapping  = aes(x = liczba_pasazerow, y = kwota_rekompensaty)) +
geom_point(mapping=aes(color=kanal)) +
geom_smooth(data = filter(wniski_db, kod_kraju == "PL"), color = "red") +
geom_smooth(data = filter(wniski_db, kod_kraju == "ES"), color = "blue")
ggplot(data = wnioski_db,
mapping  = aes(x = liczba_pasazerow, y = kwota_rekompensaty)) +
geom_point(mapping=aes(color=kanal)) +
geom_smooth(data = filter(wnioski_db, kod_kraju == "PL"), color = "red") +
geom_smooth(data = filter(wnioski_db, kod_kraju == "ES"), color = "blue")
ggplot(data = wnioski_db,
mapping  = aes(x = liczba_pasazerow, y = kwota_rekompensaty)) +
geom_point(mapping=aes(color=kanal)) +
geom_smooth(data = filter(wnioski_db, kod_kraju == "PL"), color = "red", show.legend = TRUE) +
geom_smooth(data = filter(wnioski_db, kod_kraju == "ES"), color = "blue")
ggplot(data = wnioski_db,
mapping  = aes(x = liczba_pasazerow, y = kwota_rekompensaty)) +
geom_point(mapping=aes(color=kanal)) +
geom_smooth(data = filter(wnioski_db, kod_kraju == "PL"), color = "red", show.legend = TRUE) +
geom_smooth(data = filter(wnioski_db, kod_kraju == "ES"), color = "blue", , show.legend = TRUE)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "postgres", host = "localhost", port = 5432, user = "postgres", password = "postgres") # to nie jest dobra praktyka na haslo, powinno byc w zmiennych Ĺ›rodowiskowych
dbExistsTable(con, "szczegoly_rekompensat")
wnioski_db <- dbGetQuery(con, "SELECT * from szczegoly_rekompensat limit 10000")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "postgres", host = "localhost", port = 5432, user = "postgres", password = "postgres") # to nie jest dobra praktyka na haslo, powinno byc w zmiennych Ĺ›rodowiskowych
dbExistsTable(con, "szczegoly_rekompensat")
rekompensaty_db <- dbGetQuery(con, "SELECT * from szczegoly_rekompensat limit 10000")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "postgres", host = "localhost", port = 5432, user = "postgres", password = "postgres") # to nie jest dobra praktyka na haslo, powinno byc w zmiennych Ĺ›rodowiskowych
dbExistsTable(con, "wnioski")
wnioski_db <- dbGetQuery(con, "SELECT * from wnioski limit 10000")
ggplot(data = rekompensaty_db,
mapping  = aes(x = data_utworzenia, y = kwota)) +
geom_point(data = filter(rekompensaty_db, konto == "BZWBK EUR"), mapping =aes(color = kwota)) +
geom_smooth()
ggplot(data =filter(rekompensaty_db, konto == "BZWBK EUR"),
mapping  = aes(x = data_utworzenia, y = kwota)) +
geom_point(mapping=aes(color = kwota)) +
geom_smooth()
ggplot(data =filter(rekompensaty_db, konto == "BZWBK EUR"),
mapping  = aes(x = data_utworzenia, y = kwota)) +
geom_point(mapping=aes(color = kwota)) +
geom_smooth(span=0.75)
ggplot(data = wnioski_db,
mapping  = aes(x = liczba_pasazerow, y = kwota_rekompensaty)) +
geom_point(mapping=aes(color=kanal)) +
geom_smooth(data = filter(wnioski_db, kod_kraju == "PL"), aes(color = "PL")) +
geom_smooth(data = filter(wnioski_db, kod_kraju == "ES"), aes(color = "ES")) +
scale_color_manual(name-"legend", values=c("red", "blue"))
ggplot(data = wnioski_db,
mapping  = aes(x = liczba_pasazerow, y = kwota_rekompensaty)) +
geom_point(mapping=aes(color=kanal)) +
geom_smooth(data = filter(wnioski_db, kod_kraju == "PL"), aes(color = "PL")) +
geom_smooth(data = filter(wnioski_db, kod_kraju == "ES"), aes(color = "ES")) +
scale_color_manual(name="legend", values=c("red", "blue"))
ggplot(data = wnioski_db,
mapping  = aes(x = liczba_pasazerow, y = kwota_rekompensaty)) +
geom_point() +
geom_smooth(data = filter(wnioski_db, kod_kraju == "PL"), aes(color = "PL")) +
geom_smooth(data = filter(wnioski_db, kod_kraju == "ES"), aes(color = "ES")) +
scale_color_manual(name="legend", values=c("red", "blue"))
ggplot(data = wnioski_db,
mapping  = aes(x = liczba_pasazerow, y = kwota_rekompensaty)) +
geom_point(mapping=aes(color=kanal)) +
geom_smooth(data = filter(wnioski_db, kod_kraju == "PL"), aes(color = "PL")) +
geom_smooth(data = filter(wnioski_db, kod_kraju == "ES"), aes(color = "ES")) +
scale_color_manual(name="legend", values=c("red", "blue", "black", "orange"))
ggplot(data = wnioski_db) +
geom_bar(mapping =aes(x = typ_wniosku))
ggplot(data = wnioski_db) +
geom_bar(mapping =aes(x = typ_wniosku)), stat = "count")
ggplot(data = wnioski_db) +
geom_bar(mapping =aes(x = typ_wniosku), stat = "count")
library(scales)
ggplot(data = wnioski_db) +
geom_bar(mapping =aes(x = typ_wniosku, y=..prop.., group=1)) +
scale_y_continuous(labels=percent_format())
ggplot(data = wnioski_db) +
geom_bar(mapping =aes(x = typ_wniosku), stat = "count")
ggplot(data = wnioski_db) +
geom_bar(mapping =aes(x = typ_wniosku, y=..prop.., group=1)) +
scale_y_continuous(labels=percent_format())
ggplot(data = wnioski_db) +
geom_bar(mapping =aes(x = typ_wniosku, y=..prop..)) +
scale_y_continuous(labels=percent_format())
ggplot(data = wnioski_db) +
geom_bar(mapping =aes(x = typ_wniosku, y=..prop.., group=1)) +
scale_y_continuous(labels=percent_format())
ggplot(data = wnioski_db) +
geom_bar(mapping =aes(x = typ_wniosku, y=..prop.., group=1)) +
scale_y_continuous(labels=percent_format()) +
facet_wrap(~ jezyk, ncol = 5)
ggplot(data=wnioski_db) +
stat_summary(
mapping=aes(x=jezyk,
y=kwota_rekompensaty),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data=wnioski_db) +
stat_summary(
mapping=aes(x=jezyk,
y=kwota_rekompensaty),
fun.y = min,
fun.y = max,
fun.y = median
)
ggplot(data=wnioski_db) +
stat_summary(
mapping=aes(x=jezyk,
y=kwota_rekompensaty),
fun.ymin = min,
fun.y = max,
fun.y = median
)
ggplot(data=wnioski_db) +
stat_summary(
mapping=aes(x=jezyk,
y=kwota_rekompensaty),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data=wnioski_db) +
stat_summary(
mapping=aes(x=jezyk, y=kwota_rekompensaty),
fun.y = median,
geom="point"
)
ggplot(data=wnioski_db) +
stat_summary(
mapping=aes(x=jezyk, y=kwota_rekompensaty),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data=wnioski_db) +
stat_summary(
mapping=aes(x=jezyk, y=kwota_rekompensaty, cloro="typ_wniosku"),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data=wnioski_db) +
stat_summary(
mapping=aes(x=jezyk, y=kwota_rekompensaty, color="typ_wniosku"),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = wnioski_db) +
stat_summary(mapping = aes(x = jezyk, y=kwota_rekompensaty, color = typ_wniosku),
fun.ymin = {function(x){mean(x)-sd(x)}},
fun.ymax = {function(x){mean(x)+sd(x)}},
fun.y = median)
ggplot(data=wnioski_db) +
stat_summary(
mapping=aes(x=jezyk, y=kwota_rekompensaty, color=typ_wniosku),
fun.ymin = min,
fun.ymax = max,
fun.y = median
ggplot(data=rekompensaty_db) +
stat_summary(
mapping=aes(x=konto, y=kwota),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
View(rekompensaty_db)
View(rekompensaty_db)
ggplot(data=rekompensaty_db) +
stat_summary(
mapping=aes(x=konto, y=kwota),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
version
ggplot(data=rekompensaty_db, mapping = aes(x=konto, y-kwota)) +
geom_boxplot()
ggplot(data=rekompensaty_db, mapping = aes(x=konto, y-kwota)) +
geom_boxplot()
ggplot(data=rekompensaty_db, mapping = aes(x=konto, y=kwota)) +
geom_boxplot()
ggplot(data=wnioski_db,
mapping=aes(x=jezyk, y=kwota_rekompensaty)) +
ylim(0,5000) +
geom_boxplot(outlier.colour="red", outlier.shape = 1)
ggplot(data=wnioski_db,
mapping=aes(x=jezyk, y=kwota_rekompensaty)) +
ylim(0,5000) +
geom_boxplot(outlier.colour="red", outlier.shape = 1,) +
coord_flip()
ggplot(data=wnioski_db,
mapping=aes(x=jezyk, y=kwota_rekompensaty)) +
ylim(0,5000) +
geom_boxplot(outlier.colour="red", outlier.shape = 1) +
coord_flip()
#histogram
ggplot(data = wnioski_db) +
geom_histogram(mapping = aes(x = kwota_rekompensaty))
